import pygame
import random
import time
from record_game import save_game_data  # KAYIT FONKSİYONUNU EKLEDİK
import numpy as np

# **Pygame başlat**
pygame.init()

# **Ekran ayarları**
WIDTH, HEIGHT = 600, 600
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Pac-Man Basitleştirilmiş")

# **Renkler**
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
YELLOW = (255, 255, 0)
RED = (255, 0, 0)

# **Pac-Man ayarları**
pacman_x, pacman_y = WIDTH // 2, HEIGHT // 2
pacman_speed = 5

# **Hayalet ayarları**
ghost_x, ghost_y = random.randint(50, WIDTH - 50), random.randint(50, HEIGHT - 50)
ghost_speed = 3

# **Puan noktaları**
points = [(random.randint(20, WIDTH - 20), random.randint(20, HEIGHT - 20)) for _ in range(10)]
score = 0

# **Hareket değişkenleri**
dx, dy = 0, 0

def get_inital_state():
    # Pac-Man ve hayaletin mevcut durumu
    state = {
        "pacman_x": pacman_x,
        "pacman_y": pacman_y,
        "ghost_x": ghost_x,
        "ghost_y": ghost_y,
        "score": score
    }
    return state

# **Oyun döngüsü**
running = True

    
while running:
    screen.fill(BLACK)

    # **Olayları işle (klavye)**
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    keys = pygame.key.get_pressed()
    dx, dy = 0, 0
    if keys[pygame.K_LEFT]: dx = -pacman_speed
    if keys[pygame.K_RIGHT]: dx = pacman_speed
    if keys[pygame.K_UP]: dy = -pacman_speed
    if keys[pygame.K_DOWN]: dy = pacman_speed

    # **Pac-Man hareket ettir**
    pacman_x += dx
    pacman_y += dy

    # **Pac-Man duvardan çıkmasın**
    pacman_x = max(15, min(WIDTH - 15, pacman_x))
    pacman_y = max(15, min(HEIGHT - 15, pacman_y))


    # **Hayalet hareketi (Pac-Man'i kovalama)**
    if pacman_x > ghost_x:
        ghost_x += ghost_speed
    elif pacman_x < ghost_x:
        ghost_x -= ghost_speed

    if pacman_y > ghost_y:
        ghost_y += ghost_speed
    elif pacman_y < ghost_y:
        ghost_y -= ghost_speed

    # **Puan noktalarını kontrol et**
    for point in points:
        if abs(pacman_x - point[0]) < 10 and abs(pacman_y - point[1]) < 10:
            points.remove(point)
            score += 1
    # game.py dosyasına ekle




    # **Oyunu bitir (tüm puanlar toplandıysa)**
    
    distance = np.sqrt((pacman_x - ghost_x)**2 + (pacman_y - ghost_y)**2)
    if distance < 10:  # mesafe çok küçükse (10 pixel gibi)
        print("GAME OVER")
        running = False  # çarpışma oldu
    elif len(points) == 0:
        print("Tebrikler! Tüm puanları topladın!")
        running = False

    # **Pac-Man çiz**
    pygame.draw.circle(screen, YELLOW, (pacman_x, pacman_y), 15)

    # **Hayalet çiz**
    pygame.draw.circle(screen, RED, (ghost_x, ghost_y), 15)

    # **Puan noktalarını çiz**
    for point in points:
        pygame.draw.circle(screen, WHITE, point, 5)

    # **Gerçek verileri kaydet (HER FRAME'DE)**
    #save_game_data(pacman_x, pacman_y, ghost_x, ghost_y, score)

    # **Ekranı güncelle**
    pygame.display.flip()
    pygame.time.delay(100)  # 100ms bekle (FPS azalt)

pygame.quit()
